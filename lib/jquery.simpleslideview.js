// Generated by CoffeeScript 1.6.3
(function() {
  $.SimpleSlideView = function(container, views, active) {
    var $active, $container, $views, actions, cssSupport, isActive, transEndEventName, transEndEventNames, transformPrefix;
    $container = $(container);
    $views = $(views, $container);
    $active = active ? $(active) : $views.first();
    isActive = false;
    cssSupport = (typeof Modernizr !== "undefined" && Modernizr !== null) && Modernizr.csstransforms && Modernizr.csstransitions;
    transEndEventNames = {
      'WebkitTransition': 'webkitTransitionEnd',
      'MozTransition': 'transitionend',
      'OTransition': 'oTransitionEnd otransitionend',
      'msTransition': 'MSTransitionEnd',
      'transition': 'transitionend'
    };
    if (cssSupport) {
      transformPrefix = Modernizr.prefixed('transform').replace(/([A-Z])/g, function(str, m1) {
        return '-' + m1.toLowerCase();
      }).replace(/^ms-/, '-ms-');
      transEndEventName = transEndEventNames[Modernizr.prefixed('transition')];
    }
    actions = {
      slideView: function(target, push) {
        var $target, containerWidth;
        $target = $(target);
        containerWidth = $container.width();
        $container.css({
          height: $container.outerHeight(),
          overflow: "hidden",
          position: "relative",
          width: "100%"
        });
        if (cssSupport) {
          return actions.animateCSS($target, push, containerWidth);
        } else {
          return actions.animateJS($target, push, containerWidth);
        }
      },
      animateCSS: function($target, push, containerWidth) {
        var distance;
        distance = push ? containerWidth * -1 : containerWidth;
        $target.show(0, function() {
          $active.css({
            transition: transformPrefix + " " + "500ms ease",
            transform: "translateX(" + distance + "px)"
          });
          return $target.css({
            transition: transformPrefix + " " + "500ms ease",
            transform: "translateX(" + distance + "px)"
          });
        }).css({
          left: push ? containerWidth : containerWidth * -1,
          position: "absolute",
          top: 0,
          width: containerWidth
        });
        return $(window).on(transEndEventName, function() {
          $target.attr("style", "");
          $active.attr("style", "").hide();
          $(window).off(transEndEventName);
          $container.animate({
            height: $target.outerHeight()
          }, function() {
            return $(this).css({
              height: "",
              overflow: "",
              position: "",
              width: ""
            });
          });
          if ($(window).scrollTop() > $container.position().top) {
            $.scrollTo($container, 200);
          }
          return $active = $target;
        });
      },
      animateJS: function($target, push, containerWidth) {
        $active.css({
          left: 0,
          position: "absolute",
          top: 0,
          width: containerWidth
        }).animate({
          left: push ? containerWidth * -1 : containerWidth
        }, function() {
          return $(this).attr("style", "").hide();
        });
        $target.show().css({
          left: push ? containerWidth : containerWidth * -1,
          position: "absolute",
          top: 0,
          width: containerWidth
        }).animate({
          left: 0
        }, function() {
          return $(this).attr("style", "");
        });
        $container.animate({
          height: $target.outerHeight()
        }, function() {
          return $(this).css({
            height: "",
            overflow: "",
            position: "",
            width: ""
          });
        });
        if ($(window).scrollTop() > $container.position().top) {
          $.scrollTo($container, 200);
        }
        return $active = $target;
      },
      on: function() {
        if (isActive) {
          return;
        }
        isActive = true;
        $views.not($active).css("display", "none");
        return $container.on("click", "[data-pushview]", function(event) {
          event.preventDefault();
          return actions.pushView($(this).data("pushview"));
        }).on("click", "[data-popview]", function(event) {
          event.preventDefault();
          return actions.popView($(this).data("popview"));
        });
      },
      off: function() {
        if (!isActive) {
          return;
        }
        isActive = false;
        $container.add($views).stop();
        $container.css({
          height: "",
          overflow: "",
          position: "",
          width: ""
        });
        $views.css({
          left: "",
          position: "",
          top: "",
          width: ""
        });
        $container.off("click", "[data-pushview]");
        $container.off("click", "[data-popview]");
        return $views.css("display", "");
      },
      pushView: function(target) {
        return actions.slideView(target, true);
      },
      popView: function(target) {
        return actions.slideView(target);
      }
    };
    return {
      on: actions.on,
      off: actions.off,
      pushView: actions.pushView,
      popView: actions.popView
    };
  };

}).call(this);
